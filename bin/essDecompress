#!/bin/bash
function abspath {
    if [[ -d "$1" ]]
    then
        pushd "$1" >/dev/null
        pwd
        popd >/dev/null
    elif [[ -e "$1" ]]
    then
        pushd "$(dirname "$1")" >/dev/null
        echo "$(pwd)/$(basename "$1")"
        popd >/dev/null
    else
        echo "$1" does not exist! >&2
        return 127
    fi
}
failureMessage(){
   if [ $? -eq 0 ]
   then
      echo "----------------------------"
      echo "$1 completed successfully."
      echo "----------------------------"
   else
      echo "----------------------------"
      echo "$1 FAILED." 
      echo "----------------------------"
      exit
   fi
}
set -e
PPATH=$(abspath $(dirname $0))


INPUTFILE=$(abspath $1)

cd $(dirname $INPUTFILE)

ENAME=$(basename $INPUTFILE .essc)
ENAME="$ENAME.essd"
$PPATH/mfcdESS $INPUTFILE
failureMessage "MFC-Decompression"
MFCDFILE="$INPUTFILE.d"
ISTIP=$(head -n 1 $MFCDFILE | cut -d'_' -f3)

if [[ "$ISTIP" -eq "1" ]]; then
    cat $MFCDFILE | tr "a" "{" | tr "c" "}" | tr "g" "(" | tr "t" ")" | awk -F=' ' '{print ""$1}' > $ENAME
    $PPATH/essD $ENAME 
    failureMessage "ESS-Decompress (core algorithm)"
    mv kmers.esstip.spss $ENAME 
else
    cat $MFCDFILE | tr "a" "+" | tr "c" "-" | tr "g" "[" | tr "t" "]" | awk -F=' ' '{print ""$1}' > $ENAME
    $PPATH/essD $ENAME 
    failureMessage "ESS-Decompress (core algorithm)"
    mv kmers.ess.spss $ENAME 
fi

echo "Decompressed output is in '$(dirname $INPUTFILE)/$ENAME' (a spectrum-preserving string set)"
rm "$MFCDFILE"
