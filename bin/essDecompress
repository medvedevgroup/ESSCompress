#!/bin/bash
#Last modified: Aug 21, 9 AM
VERBOSE_MODE=0
input_directory=""
Help()
{
   # Display Help
   #echo "Description of the script functions here."
   #echo
   echo "Syntax: ./essDecompress [file_to_decompress]"
   echo
   echo "Input:   a .essc file generated by essCompress"
   echo "Output:  a fasta file with .essd extension, which is a spectrum-preserving string set representation of the input file "
   echo           "In other words, the output file does not contain any duplicate k-mers and the k-mers it contains are exactly the distinct k-mers in the input. "
   echo "          A k-mer and its reverse complement are treated as equal by ESS."
   #echo
   exit
}

function abspath {
    if [[ -d "$1" ]]
    then
        pushd "$1" >/dev/null
        pwd
        popd >/dev/null
    elif [[ -e "$1" ]]
    then
        pushd "$(dirname "$1")" >/dev/null
        echo "$(pwd)/$(basename "$1")"
        popd >/dev/null
    else
        echo "$1" does not exist! >&2
        return 127
    fi
}

failureMessage(){
   if [ $? -eq 0 ]
   then
      echo -n
      #echo "----------------------------"
      #echo "$1 completed successfully."
      #echo "----------------------------"
   else
      #echo "----------------------------"
      echo "$1 FAILED.  Run with -v flag to get potentially more information on the cause of failure." 
      rm -rf $input_directory/$TMPDIRNAME
      #echo "----------------------------"
      exit
   fi
}
#set -e
PPATH="$(abspath $(dirname $0))/../"

if [[ -z "$1" ]]; then
    Help
fi



INPUTFILE=$(abspath $1)
if [ $? -eq 127 ]
   then
      exit
   fi

cd $(dirname $INPUTFILE)
input_directory=$(dirname $INPUTFILE)


ENAME=$(basename $INPUTFILE .essc)
ENAME="$ENAME.essd"
$PPATH/bin/essAuxMFCompressD $INPUTFILE 
x=$(echo $?)
if [ $x -eq 0 ]
   then
      echo -n
      #echo "----------------------------"
      #echo "MFC-Decompression completed successfully."
      #echo "----------------------------"
   else
      #echo "----------------------------"
      echo "Decompression failed due to incorrect input file format." 
      #echo "----------------------------"
      exit
   fi

#failureMessage "MFC-Decompression"
MFCDFILE="$INPUTFILE.d"
ISTIP=$(head -n 1 $MFCDFILE | cut -d'_' -f3)

TMPDIRNAME=$(echo "tmp_essd_$(date +"%s")")
mkdir -p $TMPDIRNAME
cd $TMPDIRNAME

if [[ "$ISTIP" -eq "1" ]]; then
    cat $MFCDFILE | tr "a" "{" | tr "c" "}" | tr "g" "(" | tr "t" ")" | awk -F=' ' '{print ""$1}' > $ENAME
    $PPATH/bin/essAuxDecompress $ENAME 
    failureMessage "ESS-Decompress (core algorithm)"
    mv kmers.esstip.spss ../$ENAME 
else
    cat $MFCDFILE | tr "a" "+" | tr "c" "-" | tr "g" "[" | tr "t" "]" | awk -F=' ' '{print ""$1}' > $ENAME
    $PPATH/bin/essAuxDecompress $ENAME 
    failureMessage "ESS-Decompress (core algorithm)"
    mv kmers.ess.spss ../$ENAME 
fi


echo "Decompressed output is in '$(dirname $INPUTFILE)/$ENAME' (a spectrum-preserving string set)"
rm "$MFCDFILE"
rm -rf $input_directory/$TMPDIRNAME
